// <auto-generated />
using ColumnasJson.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ColumnasJson.Migrations
{
    [DbContext(typeof(VentaContext))]
    [Migration("20230504080131_InitialCreateDb")]
    partial class InitialCreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ColumnasJson.Models.Venta", b =>
                {
                    b.Property<int>("ventaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ventaId"));

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ventaId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ColumnasJson.Models.Venta", b =>
                {
                    b.OwnsOne("ColumnasJson.Models.DataCustomer", "customer", b1 =>
                        {
                            b1.Property<int>("ventaId")
                                .HasColumnType("int");

                            b1.Property<string>("name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ventaId");

                            b1.ToTable("Ventas");

                            b1.ToJson("customer");

                            b1.WithOwner()
                                .HasForeignKey("ventaId");

                            b1.OwnsOne("ColumnasJson.Models.Address", "address", b2 =>
                                {
                                    b2.Property<int>("DataCustomerventaId")
                                        .HasColumnType("int");

                                    b2.Property<string>("calle")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ciudad")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("DataCustomerventaId");

                                    b2.ToTable("Ventas");

                                    b2.WithOwner()
                                        .HasForeignKey("DataCustomerventaId");
                                });

                            b1.Navigation("address")
                                .IsRequired();
                        });

                    b.Navigation("customer")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
